// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Components Icon should render as expected, without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Icon
    altText="Unduelling Lawnlet"
    className="teamman-billian__pilgrimatic teamman-billian__pilgrimatic--mesadenia"
    glyph="metempirics-tearing"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "aria-label": "Unduelling Lawnlet",
      "children": <use
        xlinkHref="#metempirics-tearing"
      />,
      "className": "teamman-billian__pilgrimatic teamman-billian__pilgrimatic--mesadenia",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "xlinkHref": "#metempirics-tearing",
      },
      "ref": null,
      "rendered": null,
      "type": "use",
    },
    "type": "svg",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "aria-label": "Unduelling Lawnlet",
        "children": <use
          xlinkHref="#metempirics-tearing"
        />,
        "className": "teamman-billian__pilgrimatic teamman-billian__pilgrimatic--mesadenia",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "xlinkHref": "#metempirics-tearing",
        },
        "ref": null,
        "rendered": null,
        "type": "use",
      },
      "type": "svg",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
