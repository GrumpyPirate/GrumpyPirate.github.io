@import 'core';

.column {
  flex: 1 1 auto;
  padding-left: rem(map-get($gutter-widths, 'xs') / 2);
  padding-right: rem(map-get($gutter-widths, 'xs') / 2);
  position: relative;
  @each $breakpoint in map-keys($gutter-widths) {
    @if index($gutter-widths, $breakpoint map-get($gutter-widths, $breakpoint)) > 1 {
      padding-left: rem(map-get($gutter-widths, $breakpoint) / 2);
      padding-right: rem(map-get($gutter-widths, $breakpoint) / 2);
    }
  }

  // Modifiers
  // Spans
  @for $i from 1 through $grid-columns {
    &-#{$i} {
      flex: 0 0 percentage($i / $grid-columns);
      max-width: percentage($i / $grid-columns);
    }
  }

  // Spans - per breakpoint
  @each $breakpoint in map-keys($breakpoints) {
    @if index($breakpoints, $breakpoint map-get($breakpoints, $breakpoint)) > 1 {
      @include respond-up($breakpoint) {
        &-#{$breakpoint}-auto {
          flex: 1 1 0;
        }

        @for $i from 1 through $grid-columns {
          &-#{$breakpoint}-#{$i} {
            flex: 0 0 percentage($i / $grid-columns);
            max-width: percentage($i / $grid-columns);
          }
        }
      }
    }
  }

  // Pushes
  &-push {
    @for $i from 1 through ($grid-columns - 1) {
      &-#{$i} {
        left: percentage($i / $grid-columns);
      }
    }

    @each $breakpoint in map-keys($breakpoints) {
      @if index($breakpoints, $breakpoint map-get($breakpoints, $breakpoint)) > 1 {
        @include respond-up($breakpoint) {
          @for $i from 1 through ($grid-columns - 1) {
            &-#{$breakpoint}-#{$i} {
              left: percentage($i / $grid-columns);
            }
          }
        }
      }
    }
  }

  // Pulls
  &-pull {
    @for $i from 1 through ($grid-columns - 1) {
      &-#{$i} {
        right: percentage($i / $grid-columns);
      }
    }

    @each $breakpoint in map-keys($breakpoints) {
      @if index($breakpoints, $breakpoint map-get($breakpoints, $breakpoint)) > 1 {
        @include respond-up($breakpoint) {
          @for $i from 1 through ($grid-columns - 1) {
            &-#{$breakpoint}-#{$i} {
              right: percentage($i / $grid-columns);
            }
          }
        }
      }
    }
  }
}
