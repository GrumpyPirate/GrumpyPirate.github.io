@import 'mixins/media-queries';
@import 'mixins/typography';

@mixin no-underline {
  &,
  &:hover,
  &:focus {
    text-decoration: none;
  }
}

@mixin make-link-colour(
  $colour,
  $hover-colour: false,
  $active-colour: false,
  $lighten: false,
  $self: false
) {
  @if not $self {
    a {
      color: $colour;

      &:hover,
      &:focus {
        @if $hover-colour {
          color: $hover-colour;
        } @else {
          @if $lighten {
            color: lighten($colour, 10%);
          } @else {
            color: darken($colour, 10%);
          }
        }
      }

      &:active {
        @if $active-colour {
          color: $active-colour;
        } @else {
          color: darken($colour, 10%);
        }
      }
    }
  } @else {
    color: $colour;

    &:hover,
    &:focus {
      @if $hover-colour {
        color: $hover-colour;
      } @else {
        @if $lighten {
          color: lighten($colour, 10%);
        } @else {
          color: darken($colour, 10%);
        }
      }
    }

    &:active {
      @if $active-colour {
        color: $active-colour;
      } @else {
        color: darken($colour, 10%);
      }
    }
  }
}

// Mixin: give a link a custom animated underline
// If $animate is passed as false, the resulting effect is a simple static customiseable underline
// ---------------------------------------------------------------------------------------------------------------------
@mixin lasers(
  $display: inline-block,
  $bottom: 0,
  $laser-colour: currentColor,
  $laser-height: 1px,
  $animate: true,
  $duration: $anim-dur,
  $direction: ltr
) {
  @include no-underline;

  display: $display;
  position: relative;

  &::before {
    background-color: $laser-colour;
    bottom: $bottom;
    content: '';
    display: block;
    height: $laser-height;
    left: 0;
    position: absolute;
    width: 100%;
  }

  @if $animate {
    &::before {
      transform: scaleX(0);
      transition: transform $duration ease;
    }

    &:focus,
    &:hover,
    &:active {
      &::before {
        transform: scaleX(1);
      }
    }

    @if $direction == ltr {
      &::before {
        transform-origin: left center;
      }
    } @else if $direction == rtl {
      &::before {
        transform-origin: right center;
      }
    } @else if $direction == out {
      &::before,
      &::after {
        background-color: $laser-colour;
        bottom: $bottom;
        content: '';
        display: block;
        height: $laser-height;
        position: absolute;
        transform: scaleX(0);
        transition: transform $duration ease;
        width: 50%;
      }

      &::before {
        left: 0;
        transform-origin: right center;
      }

      &::after {
        right: 0;
        transform-origin: left center;
      }

      &:focus,
      &:hover,
      &:active {
        &::before,
        &::after {
          transform: scaleX(1);
        }
      }
    }
  }
}

// No user pointer interaction (text selection, pointer events)
// ---------------------------------------------------------------------------------------------------------------------
@mixin no-select {
  cursor: default;
  pointer-events: none;
  user-select: none;
}

// No outlines
// ---------------------------------------------------------------------------------------------------------------------
@mixin no-outline {
  &,
  &:hover,
  &:focus,
  &:active {
    outline: 0;
  }
}

// No box-shadows
// ---------------------------------------------------------------------------------------------------------------------
@mixin no-box-shadow {
  &,
  &:hover,
  &:focus,
  &:active {
    box-shadow: none;
  }
}

// Mixin to clear browser default button styles
// ---------------------------------------------------------------------------------------------------------------------
@mixin button-reset {
  background: 0;
  border: 0;
  box-shadow: none;
  color: inherit;
  cursor: pointer;
  margin: 0;
  padding: 0;
  touch-action: manipulation;
  user-select: none;
}
